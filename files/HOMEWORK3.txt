SQL> set serveroutput on ;
SQL> DECLARE
  2   cnt number;
  3  BEGIN
  4   DBMS_OUTPUT.PUT_LINE('This is a demo of FOR LOOP ');
  5   for cnt in 1..5 LOOP
  6   DBMS_OUTPUT.PUT_LINE('LOOP number ' || cnt);
  7   END LOOP;
  8  END;
  9  /
This is a demo of FOR LOOP                                                      
LOOP number 1                                                                   
LOOP number 2                                                                   
LOOP number 3                                                                   
LOOP number 4                                                                   
LOOP number 5                                                                   

PL/SQL procedure successfully completed.

SQL> DECLARE  DECLARE
  2   cnt number(2) := 0;
  3  BEGIN
  4   DBMS_OUTPUT.PUT_LINE('This is a demo of LOOP
  5  LOOP');
  6   LOOP
  7   cnt := cnt + 1;
  8   exit when cnt > 10;
  9   DBMS_OUTPUT.PUT_LINE('LOOP counter' || cnt);
 10   END LOOP;
 11* END;
SQL> /
This is a demo of LOOP
LOOP                                                     
LOOP counter1                                                                   
LOOP counter2                                                                   
LOOP counter3                                                                   
LOOP counter4                                                                   
LOOP counter5                                                                   
LOOP counter6                                                                   
LOOP counter7                                                                   
LOOP counter8                                                                   
LOOP counter9                                                                   
LOOP counter10                                                                  

PL/SQL procedure successfully completed.

SQL> DECLARE
  2  cnt number(2) := 1;
  3  BEGIN
  4   DBMS_OUTPUT.PUT_LINE('This is a demo of WHILE LOOP');
  5   WHILE cnt <= 10 LOOP
  6   DBMS_OUTPUT.PUT_LINE('LOOP counter: ' || to_char(cnt, '999'));
  7   cnt := cnt + 1;
  8   END LOOP;
  9* END;
SQL> /
This is a demo of WHILE LOOP                                                    
LOOP counter:    1                                                              
LOOP counter:    2                                                              
LOOP counter:    3                                                              
LOOP counter:    4                                                              
LOOP counter:    5                                                              
LOOP counter:    6                                                              
LOOP counter:    7                                                              
LOOP counter:    8                                                              
LOOP counter:    9                                                              
LOOP counter:   10                                                              

PL/SQL procedure successfully completed.


SQL> DECLARE
  2   dno number(4);
  3   dname varchar2(30);
  4   ddate date;
  5   dbasic number(8,2);
  6  BEGIN
  7   SELECT employee_id, first_name, hire_date, salary
  8   INTO dno, dname, ddate, dbasic
  9   FROM employees
 10   WHERE employee_id = &userno;
 11   IF sql%ROWCOUNT > 0 THEN
 12   INSERT INTO newemp
 13   VALUES (dno, dname,dbasic ,ddate);
 14   DBMS_OUTPUT.PUT_LINE('Record inserted into NEWEMP');
 15   DBMS_OUTPUT.PUT_LINE(DNO || ' ' || DNAME || ' ' || DDATE || ' ' || DBASIC);
 16   END IF;
 17  EXCEPTION
 18   WHEN no_data_found THEN
 19   DBMS_OUTPUT.PUT_LINE ('Record ' || &userno || ' does not exist');
 20  END;
 21  /
Enter value for userno: 100
old  10:  WHERE employee_id = &userno;
new  10:  WHERE employee_id = 100;
Enter value for userno: 100
old  19:  DBMS_OUTPUT.PUT_LINE ('Record ' || &userno || ' does not exist');
new  19:  DBMS_OUTPUT.PUT_LINE ('Record ' || 100 || ' does not exist');
Record inserted into NEWEMP                                                     
100 Steven 17-JUN-87 24000                                                      

PL/SQL procedure successfully completed.

SQL> DECLARE
  2  tot_basic number(10, 2);
  3  tax number(10, 2);
  4  name varchar2(30);
  5  BEGIN
  6   SELECT first_name, salary
  7   INTO name, tot_basic
  8   FROM employees
  9   WHERE employee_id = &userno;
 10   IF tot_basic = 0 or tot_basic IS NULL THEN
 11   DBMS_OUTPUT.PUT_LINE('NO BASIC');
 12  
 13   ELSIF tot_basic <= 2000 THEN
 14   tax := tot_basic * .02;
 15  DBMS_OUTPUT.PUT_LINE(NAME || ' TOTAL BASIC: ' || TOT_BASIC);
 16  DBMS_OUTPUT.PUT_LINE(NAME || ' TOTAL TAX: ' || TAX);
 17   ELSE
 18   tax := tot_basic * .04;
 19  DBMS_OUTPUT.PUT_LINE(NAME || ' TOTAL BASIC: ' || TOT_BASIC);
 20  DBMS_OUTPUT.PUT_LINE(NAME || ' TOTAL TAX: ' || TAX);
 21   END IF;
 22  EXCEPTION
 23   WHEN NO_DATA_FOUND THEN
 24   DBMS_OUTPUT.PUT_LINE ('Record ' || &userno || ' does not exist');
 25  END;
 26  /
Enter value for userno: 100
old   9:  WHERE employee_id = &userno;
new   9:  WHERE employee_id = 100;
Enter value for userno: 100
old  24:  DBMS_OUTPUT.PUT_LINE ('Record ' || &userno || ' does not exist');
new  24:  DBMS_OUTPUT.PUT_LINE ('Record ' || 100 || ' does not exist');
Steven TOTAL BASIC: 24000                                                       
Steven TOTAL TAX: 960                                                           

PL/SQL procedure successfully completed.

SQL> DECLARE
  2  vdept departments%ROWTYPE;
  3  cursor c1 is SELECT * FROM departments;
  4  BEGIN
  5   FOR vdept IN c1 LOOP
  6   DBMS_OUTPUT.PUT_LINE ('vdno = ' || vdept.department_id ||
  7   ' vdname = ' || vdept.department_name || ' vloc = ' || vdept.location_id);
  8   END LOOP;
  9  END;
 10  /
vdno = 10 vdname = Administration vloc = 1700                                   
vdno = 20 vdname = Marketing vloc = 1800                                        
vdno = 30 vdname = Purchasing vloc = 1700                                       
vdno = 40 vdname = Human Resources vloc = 2400                                  
vdno = 50 vdname = Shipping vloc = 1500                                         
vdno = 60 vdname = IT vloc = 1400                                               
vdno = 70 vdname = Public Relations vloc = 2700                                 
vdno = 80 vdname = Sales vloc = 2500                                            
vdno = 90 vdname = Executive vloc = 1700                                        
vdno = 100 vdname = Finance vloc = 1700                                         
vdno = 110 vdname = Accounting vloc = 1700                                      
vdno = 120 vdname = Treasury vloc = 1700                                        
vdno = 130 vdname = Corporate Tax vloc = 1700                                   
vdno = 140 vdname = Control And Credit vloc = 1700                              
vdno = 150 vdname = Shareholder Services vloc = 1700                            
vdno = 160 vdname = Benefits vloc = 1700                                        
vdno = 170 vdname = Manufacturing vloc = 1700                                   
vdno = 180 vdname = Construction vloc = 1700                                    
vdno = 190 vdname = Contracting vloc = 1700                                     
vdno = 200 vdname = Operations vloc = 1700                                      
vdno = 210 vdname = IT Support vloc = 1700                                      
vdno = 220 vdname = NOC vloc = 1700                                             
vdno = 230 vdname = IT Helpdesk vloc = 1700                                     
vdno = 240 vdname = Government Sales vloc = 1700                                
vdno = 250 vdname = Retail Sales vloc = 1700                                    
vdno = 260 vdname = Recruiting vloc = 1700                                      
vdno = 270 vdname = Payroll vloc = 1700                                         

PL/SQL procedure successfully completed.

SQL> DECLARE
  2   no employees.employee_id%type;
  3   name employees.first_name%type;
  4   salary employees.salary%type;
  5   CURSOR c1 IS
  6   SELECT employee_id, first_name, salary
  7   FROM employees order by salary desc;
  8  BEGIN
  9   OPEN c1;
 10   LOOP
 11   FETCH c1 INTO no, name, salary;
 12   EXIT WHEN c1 %NOTFOUND;
 13   EXIT WHEN c1 %ROWCOUNT >3;
 14   DBMS_OUTPUT.PUT_LINE(no || ' ' || name || ' '||salary);
 15   END LOOP;
 16   CLOSE c1;
 17  END;
 18  /
100 Steven 24000                                                                
101 Neena 17000                                                                 
102 Lex 17000                                                                   

PL/SQL procedure successfully completed.

SQL> DECLARE
  2  vrec employees%ROWTYPE;
  3  avgsal number(10,2);
  4  cursor c1 is SELECT * FROM employees for update;
  5  BEGIN
  6  SELECT avg(salary)
  7  INTO avgsal
  8  FROM employees;
  9  FOR vrec IN c1 LOOP
 10   IF vrec.salary < avgsal THEN
 11   vrec.salary := avgsal;
 12  UPDATE employees
 13   SET salary = vrec.salary
 14   WHERE current of c1;
 15   DBMS_OUTPUT.PUT_LINE('Record updated');
 16   END IF;
 17   END LOOP;
 18  END;
 19  /
Record updated                                                                  
Record updated                                                                  
Record updated                                                                  
Record updated                                                                  
Record updated                                                                  
Record updated                                                                  
Record updated                                                                  
Record updated                                                                  
Record updated                                                                  
Record updated                                                                  
Record updated                                                                  
Record updated                                                                  
Record updated                                                                  
Record updated                                                                  
Record updated                                                                  
Record updated                                                                  
Record updated                                                                  
Record updated                                                                  
Record updated                                                                  
Record updated                                                                  
Record updated                                                                  
Record updated                                                                  
Record updated                                                                  
Record updated                                                                  
Record updated                                                                  
Record updated                                                                  
Record updated                                                                  
Record updated                                                                  
Record updated                                                                  
Record updated                                                                  
Record updated                                                                  
Record updated                                                                  
Record updated                                                                  
Record updated                                                                  
Record updated                                                                  
Record updated                                                                  
Record updated                                                                  
Record updated                                                                  
Record updated                                                                  
Record updated                                                                  
Record updated                                                                  
Record updated                                                                  
Record updated                                                                  
Record updated                                                                  
Record updated                                                                  
Record updated                                                                  
Record updated                                                                  
Record updated                                                                  
Record updated                                                                  
Record updated                                                                  
Record updated                                                                  
Record updated                                                                  
Record updated                                                                  
Record updated                                                                  
Record updated                                                                  
Record updated                                                                  

PL/SQL procedure successfully completed.

SQL> DECLARE
  2  ctr number(2) := 0; dno
  3  number(4);
  4  dname varchar2(30);
  5  ddate date;
  6   CURSOR cur_mgr IS
  7   SELECT employee_id,first_name, hire_date
  8   FROM employees
  9   WHERE UPPER (job_id) LIKE '%MGR';
 10   no_manager_found EXCEPTION;
 11  BEGIN
 12   OPEN cur_mgr;
 13   LOOP
 14  FETCH cur_mgr
 15  INTO dno, dname, ddate;
 16  EXIT WHEN cur_mgr%NOTFOUND;
 17  ctr := ctr + 1;
 18  DBMS_OUTPUT.PUT_LINE(ctr || 'Record inserted into NEWEMP');
 19  DBMS_OUTPUT.PUT_LINE(dno || ' ' || dname || ' ' ||ddate);
 20   INSERT INTO newemp (emp_no,emp_name,join_date)
 21   VALUES (dno, dname, ddate);
 22   END LOOP;
 23  IF cur_mgr%ROWCOUNT = 0 THEN
 24   CLOSE cur_mgr;
 25   RAISE no_manager_found;
 26  END IF;
 27  DBMS_OUTPUT.PUT_LINE('TOTAL number of records' || ctr);
 28  CLOSE cur_mgr;
 29  EXCEPTION
 30  WHEN no_manager_found THEN
 31  DBMS_OUTPUT.PUT_LINE('NO RECORS FOUND');
 32  END;
 33  /
1Record inserted into NEWEMP                                                    
205 Shelley 07-JUN-94                                                           
2Record inserted into NEWEMP                                                    
108 Nancy 17-AUG-94                                                             
TOTAL number of records2                                                        

PL/SQL procedure successfully completed.

SQL> spool off;
